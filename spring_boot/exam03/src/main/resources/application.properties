# 애플리케이션 포트 설정
server.port=3000

# 타임리프 캐쉬 임시 삭제 (개발할 때 편함)
spring.thymeleaf.cache=false

spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=60MB

# MySql 연결 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    # 데이터 베이스에 연결하기 위해 mysql jdbc driver 사용
spring.datasource.url=jdbc:mysql://localhost:3306/springdb
    # 연결 할 데이터베이스의 URL, 포트 번호, 데이터베이스의 이름 입력
spring.datasource.username=root
spring.datasource.password=aA!123456
    # 데이터베이스를 생성할 때 생성한 아이디와 비밀번호 입력

# 실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true

# 콘솔 창에 출력되는 쿼리를 가독성 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

# 쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

spring.jpa.hibernate.ddl-auto=update
    # 데이터베이스 초기화 전략
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
    # SQL은 표준 SQL과 DBSM 벤더에서 제공하는 SQL이 존재
    # 각 공급업체에서 만든 SQL을 방언(Dialect)라고 함
    # 우리가 사용하는 데이터베이스는 MySQL이여서 JPA에 MySQL8Dialect를 사용하라고 알려줌
    # 만약 데이터베이스를 오라클로 교채해도 오라클의 Dialect를 설정하면 됨
