객체 리터럴
{
	속성명 : 값,
	속셩명 : 값
	...
}

JSON(JavaScript Objcet Notation) : 문자열 

없는 속성명에 값을 대입 -> 속성이 추가



함수 객체
	- 값, 1급 객체(함수)
	- 매개변수로 함수 객체 사용
	- 반환값으로 함수 객체 사용
	- 객체를 생성 가능

1. 변수의 유효 범위
	- 전역 변수 : 함수 바깥에 정의
	- 지역 변수 : 함수 내부에 정의

	- var : 함수 내부가 지역 -> 중요한 변수가 실수로 인해 바뀌는 경우가 많음

	- 그래서 지역을 중괄호 안 부터 지역으로 구분
		- let : 변수 선언자
		- const : 상수 선언자
		
		- 대부분의 변수를 const로 쓰고 난 뒤에 변수의 값이 바뀌어야 할 때 
		  let으로 바꾸는 식으로 코딩 습관 들여야 함


2. 함수 리터럴로 함수 정의하기
	- 익명 함수


3. 객체의 메서드
	- this 

4. 즉시 실행 함수
	- (function(){
		// 실행 부분
	  })();


5. 가변길이 인수 목록(Arguments 객체)
	- arguments : 입력한 매개 변수의 정보를 담은 객체
		- es5
	- ... : es6

6. 템플릿 함수
	- ' '
	
	
생성자 객체
	- 함수 객체 -> 다른 객체 생성

	- new 생성자 함수();
		1) 빈 객체 -> {}
		
		2) Person.prototype -> {} -> [[Prototype]](상속)

		3) 생성자 함수에 있는 this.변수 -> {}

	- 생성자 객체 -> 상속 -> 객체 생성
		- prototype.apply
		- prototype.call
		- prototype.

	- prototype 속성
		- constructor : 생성자 함수를 참조 변수
	
프로토 타입
	- 프로토 타입 체인(객체의 상속 관계) : 상속관계의 링크 연결
		- [[Prototype]]
		- __proto__




















