쓰레드

1. 프로세스와 쓰레드
	- 프로세스
		: 현재 실행 중인 프로그램
			- 데이터, 메모리
			- 쓰레드(함수가 실행되는 메인 메서드 + 스택 메모리) = 작업대
			- 데이터를 사용해서 기능을 수행

			- 프로세스 내에 여러 개의 쓰레드를 가질 수 있다.
				( 스택 메모리 )

	- 멀티 쓰레딩
		- 쓰레드가 여러 개(작업대가 여러 개)
		- CPU의 메모리 자원을 효율적으로 사용할 수 있다.
		- 동시에 실행되므로 사용자의 사용성이 증대

		- 단점
			- 쓰레드가 같은 자원을 공유해서 작업을 진행
				-> 데이터 공유 시 동기화 문제 발생
				-> 교착상태가 발생하는 문제

	- 작업대 -> 기능 -> 함수 -> 주가 되는 함수 + 호출 스택 = 쓰레드

2. 쓰레드의 구현과 실행
	1) Thread 클래스 상속
		- 상속을 받으면 다른 클래스 상속 x -> 기능 확장에 제한
		- run 메서드 구현
	
	2) Runnable 인터페이스를 구현
		- 다른 클래스 상속 -> 기능 확장 o
		- run 메서드 구현
		- Tread 생성자 매개변수로 사용 실행
	3) 실행
		- start() : 호출 스택 + run() -> 실행

3. 싱글 쓰레드와 멀티 쓰레드
	- 시분할 방식

4. 쓰레드의 우선 순위
	- 1 ~ 10 // 싱글 코어

5. 쓰레드 그룹(thread group) 
	- 모든 쓰레드는 그룹이 있다
	- main 그룹

6. 데몬 쓰레드(daemon thread)
	- 특정 쓰레드에 종속되어 있는 쓰레드
	- 특정 쓰레드가 종료 -> 데몬 쓰레드도 종료
	- setDaemon(true)

7. 쓰레드의 실행 제어
	- 시작, 중지, 재시작 ...
	- join()
	- volatile : 캐시에서 데이터 접근이 아닌, 메모리에서 직접 접근
	- interrupt() 
		- 중단 요청
		- 호출 interrupted 값 -> true
	- boolean interrupted()
		- 중단 상태, 중단 요청 true, 아닐 때는 false 
		- 현재 interrupted 상태 값 반환
			-> false로 초기화
		- InterruptedExeption 발생
	- boolean isInterrupted()
		- 현재 interrupted 값만 반환
	- yield()
		- 다음 쓰레드에게 작업 양보

8. 쓰레드의 동기화
	- 








